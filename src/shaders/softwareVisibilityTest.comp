#version 450

#include "include/structs/aabbTree.glsl"
#include "include/reservoir.glsl"

layout (local_size_x = SW_VISIBILITY_TEST_GROUP_SIZE_X, local_size_y = SW_VISIBILITY_TEST_GROUP_SIZE_Y, local_size_z = 1) in;

layout (binding = 0) uniform Uniforms {
	RestirUniforms uniforms;
};

layout (binding = 1) uniform sampler2D uniWorldPosition;

layout (binding = 2) buffer Reservoirs {
	Reservoir reservoirs[];
};
layout (binding = 3) buffer AabbTree {
	int root;
	AabbTreeNode nodes[];
} aabbTree;
layout (binding = 4) buffer Triangles {
	Triangle triangles[];
};

#define NODE_BUFFER aabbTree
#define TRIANGLE_BUFFER triangles
#include "include/softwareRaytracing.glsl"

void main() {
	uvec2 pixelCoord = gl_GlobalInvocationID.xy;
	if (any(greaterThanEqual(pixelCoord, uniforms.screenSize))) {
		return;
	}

	vec3 worldPos = texelFetch(uniWorldPosition, ivec2(pixelCoord), 0).xyz;
	uint reservoirIndex = pixelCoord.y * uniforms.screenSize.x + pixelCoord.x;
	Reservoir res = reservoirs[reservoirIndex];
	for (int i = 0; i < RESERVOIR_SIZE; ++i) {
		vec3 dir = res.samples[i].position.xyz - worldPos;
		vec3 offset = 0.001f * normalize(dir);
		if (!raytrace(worldPos + offset, dir - 2 * offset)) {
			res.samples[i].w = 0.0f;
			res.samples[i].sumWeights = 0.0f;
		}
	}
	reservoirs[reservoirIndex] = res;
}
